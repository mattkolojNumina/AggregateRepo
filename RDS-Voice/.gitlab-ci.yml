image: jangrewe/gitlab-ci-android

variables:
  GIT_SUBMODULE_STRATEGY: recursive



stages:
  - build
  - release

  

cache:
  key: ${CI_PROJECT_ID}
  paths:
    - .gradle/

assembleRelease:
  stage: build
  before_script:
    - echo $CI_JOB_ID
    - echo GE_JOB_ID=$CI_JOB_ID >> assembleRelease.env
    - export GRADLE_USER_HOME=$(pwd)/.gradle
    - chmod +x ./gradlew
  script:
    - echo $KEYSTORE_FILE | base64 -d > my.keystore
    - ./gradlew assembleRelease
      -Pandroid.injected.signing.store.file=$(pwd)/my.keystore
      -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD
      -Pandroid.injected.signing.key.alias=$KEY_ALIAS
      -Pandroid.injected.signing.key.password=$KEY_PASSWORD
    - mv app/build/outputs/apk/release/app-release.apk ${CI_PROJECT_DIR}/rdsVoice.apk
  artifacts:
    paths:
      - rdsVoice.apk
    reports:
      # To ensure we've access to this file in the next stage
      dotenv: assembleRelease.env      
  only:
    refs:
      - tags    

release_job:
  stage: release
  needs:
    - job: assembleRelease
      artifacts: true
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG                  # Run this job when a tag is created manually
  script:
    - echo "running release_job"
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: 'Created using the release-cli $EXTRA_DESCRIPTION'  # $EXTRA_DESCRIPTION must be defined
    tag_name: '$CI_COMMIT_TAG'                                       # elsewhere in the pipeline.
    ref: '$CI_COMMIT_TAG'
    assets: # Optional, multiple asset links
      links:
        - name: 'rdsVoice apk'
          url: 'https://gitlab.com/NuminaGroup/numina-voice-android/-/jobs/${GE_JOB_ID}/artifacts/download?file_type=archive'
  
